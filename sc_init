#!/bin/bash

###############################################
####            Bash FUNCTIONS              ###
###############################################

BASH_showHelp(){
	## Simple Help
	if [[ $# == 0 ]]; then
		echo -e ""
		echo -e "        |==============================|                       "
		echo -e "        |           SC INIT            |                       "
		echo -e "        |==============================|                       "
		echo -e ""
		echo -e "Script to install and update SC scripts."
		echo -e "\nParameters:"
		echo -e "\t-h\tShow this help message and exit."
		echo -e ""
		echo -e "\t-i\tInstall or reinstall sc_scripts."
		echo -e ""
		echo -e "\t-u\tSoft update (recomended)."
		echo -e ""
		echo -e "\t-r\tHard update (not recomended)."
		echo -e ""
	else
		printError "No expanded options allowed!\n"
		return 1
	fi
	return 0
}
#-------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------
BASH_scInstall(){
	## get rest of date from git
	rm -rf ~/.sc_scripts
	cd ~/
	git clone https://github.com/MirekJ/.sc_scripts
	if [ -z "$(cat ~/.bashrc | grep -n "## SC scripts source.*")" ]; then
		echo "Ading SC source into ~/.bashrc ....."
		echo -e "\n## SC scripts source\nif [ -f ~/.sc_scripts/.bashrc_sc ]; then\n\t. ~/.sc_scripts/.bashrc_sc\nfi" >> ~/.bashrc
		echo -e "\e[92mSC source added into ~/.bashrc\e[0m"
	fi
	echo "-----------------------------------------------------"
	echo -e "\e[92mINSTALL COMPLETED\e[0m"
	echo -e "\e[1;34mINFO:\e[0m To use scripts type source ~/.bashrc or open new shell."
	echo "Help to scripts can be shown by schelp"
	echo "-----------------------------------------------------"
	exit 0
}
#-------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------
BASH_softUpdate(){
	if [ -d ~/.sc_scripts ]; then
		git -C ~/.sc_scripts pull
	else
		echo "You cant update when scripts were not installed yet!"
	fi
}
#-------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------
BASH_hardUpdate(){
	if [ -d ~/.sc_scripts ]; then
		git -C ~/.sc_scripts fetch origin master
		git -C ~/.sc_scripts reset --hard FETCH_HEAD
		git -C ~/.sc_scripts clean -df
	else
		echo "You cant reinstall when scripts were not installed yet!"
	fi
}

###########################################
####            Script Body             ###
###########################################
if [[ $# == 0 || $1 == "-h" || $1 == "--help" ]]; then ## Just help?
	shift
	BASH_showHelp $@
	exit 0
elif [[ ${1} == "-i"  ]]; then ## Calculate statistics?
	shift
	BASH_scInstall
	exit $?
elif [[ ${1} == "-u" ]]; then ## Do we want to plot statistics?
	shift
	BASH_softUpdate
	exit $?
elif [[ ${1} == "-r" ]]; then ## Do we want to plot statistics?
	shift
	BASH_hardUpdate
	exit $?
else
	echo -e "Wrong argument was selected for info type ${0} -h, --help"
	exit 1
fi

